// import { createStore, combineReducers } from 'redux'


// export const dados = (resp: any) => resp


// const reducers = combineReducers({
// 	prop1: function(state, action) {
// 	  return {dados}
// 	},

// })


// function store() {
// 	return createStore(reducers)
// }

// export default store

//=======

// Import createSlice() from Redux toolkit:
import { createSlice } from '@reduxjs/toolkit'

// Initial state for Redux store:
const initialState = {
  weather: ['teste', 'teste']
}

// Create Redux state slice
const libraryWeather = createSlice({
  name: 'weather',
  initialState, // Define initial state
  reducers: {
    // Define reducers
    addWeather: (state, action) => {
      // Reducer for adding new book to collection
      // Create new state by taking existing books
      // and combining them with newly added book:
      state.weather = [state.weather, action.payload]
    }
  }
})

// Export actions generated by "createSlice()":
export const { addWeather } = libraryWeather.actions

// Export reducer generated by "createSlice()":
export default libraryWeather.reducer